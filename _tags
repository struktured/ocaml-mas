# OASIS_START
# DO NOT EDIT (digest: 9c180d8f81c0eeff0a3367d29a6d4c07)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library mas_core
"src/core/mas_core.cmxs": use_mas_core
"src/core/gen_ext.cmx": for-pack(Mas_core)
"src/core/mas_intf.cmx": for-pack(Mas_core)
"src/core/action.cmx": for-pack(Mas_core)
"src/core/mas_system.cmx": for-pack(Mas_core)
"src/core/state.cmx": for-pack(Mas_core)
"src/core/policies.cmx": for-pack(Mas_core)
"src/core/agents.cmx": for-pack(Mas_core)
"src/core/reward_functions.cmx": for-pack(Mas_core)
"src/core/learning_rule.cmx": for-pack(Mas_core)
"src/core/value_function.cmx": for-pack(Mas_core)
"src/core/discrete_value_function.cmx": for-pack(Mas_core)
"src/core/learning_rules.cmx": for-pack(Mas_core)
<src/core/*.ml{,i,y}>: pkg_containers
<src/core/*.ml{,i,y}>: pkg_containers.misc
<src/core/*.ml{,i,y}>: pkg_gen
<src/core/*.ml{,i,y}>: pkg_oml
<src/core/*.ml{,i,y}>: pkg_ppx_deriving
<src/core/*.ml{,i,y}>: pkg_ppx_deriving.iter
<src/core/*.ml{,i,y}>: pkg_ppx_deriving.ord
<src/core/*.ml{,i,y}>: pkg_ppx_deriving.show
<src/core/*.ml{,i,y}>: pkg_ppx_deriving_protobuf
<src/core/*.ml{,i,y}>: pkg_prob_cache_containers
# Library mas_environments
"src/environments/mas_environments.cmxs": use_mas_environments
"src/environments/two_agent.cmx": for-pack(Mas_environments)
<src/environments/*.ml{,i,y}>: pkg_containers
<src/environments/*.ml{,i,y}>: pkg_containers.misc
<src/environments/*.ml{,i,y}>: pkg_gen
<src/environments/*.ml{,i,y}>: pkg_oml
<src/environments/*.ml{,i,y}>: pkg_ppx_deriving
<src/environments/*.ml{,i,y}>: pkg_ppx_deriving.iter
<src/environments/*.ml{,i,y}>: pkg_ppx_deriving.ord
<src/environments/*.ml{,i,y}>: pkg_ppx_deriving.show
<src/environments/*.ml{,i,y}>: pkg_ppx_deriving_protobuf
<src/environments/*.ml{,i,y}>: pkg_prob_cache_containers
<src/environments/*.ml{,i,y}>: use_mas_core
# Library mas_plot
"src/plot/mas_plot.cmxs": use_mas_plot
"src/plot/decorators.cmx": for-pack(Mas_plot)
"src/plot/archimedes_plot.cmx": for-pack(Mas_plot)
<src/plot/*.ml{,i,y}>: pkg_archimedes
<src/plot/*.ml{,i,y}>: pkg_containers
<src/plot/*.ml{,i,y}>: pkg_containers.misc
<src/plot/*.ml{,i,y}>: pkg_gen
<src/plot/*.ml{,i,y}>: pkg_oml
<src/plot/*.ml{,i,y}>: pkg_ppx_deriving
<src/plot/*.ml{,i,y}>: pkg_ppx_deriving.iter
<src/plot/*.ml{,i,y}>: pkg_ppx_deriving.ord
<src/plot/*.ml{,i,y}>: pkg_ppx_deriving.show
<src/plot/*.ml{,i,y}>: pkg_ppx_deriving_protobuf
<src/plot/*.ml{,i,y}>: pkg_prob_cache_containers
<src/plot/*.ml{,i,y}>: use_mas_core
<src/plot/*.ml{,i,y}>: use_mas_environments
# Library mas_examples
"src/examples/mas_examples.cmxs": use_mas_examples
"src/examples/narmed_bandit.cmx": for-pack(Mas_examples)
<src/examples/*.ml{,i,y}>: pkg_archimedes
<src/examples/*.ml{,i,y}>: pkg_containers
<src/examples/*.ml{,i,y}>: pkg_containers.misc
<src/examples/*.ml{,i,y}>: pkg_gen
<src/examples/*.ml{,i,y}>: pkg_oml
<src/examples/*.ml{,i,y}>: pkg_ppx_deriving
<src/examples/*.ml{,i,y}>: pkg_ppx_deriving.iter
<src/examples/*.ml{,i,y}>: pkg_ppx_deriving.ord
<src/examples/*.ml{,i,y}>: pkg_ppx_deriving.show
<src/examples/*.ml{,i,y}>: pkg_ppx_deriving_protobuf
<src/examples/*.ml{,i,y}>: pkg_prob_cache_containers
<src/examples/*.ml{,i,y}>: use_mas_core
<src/examples/*.ml{,i,y}>: use_mas_environments
<src/examples/*.ml{,i,y}>: use_mas_plot
# OASIS_STOP
